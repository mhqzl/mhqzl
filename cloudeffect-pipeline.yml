version: v1
steps:
  - name: 检出代码
    type: git-checkout
    params:
      repository: github.com/mhqzl/mhqzl
      branch: main

  - name: 安装依赖并执行测试
    type: custom
    image: python:3.9
    commands: |
    # 1. 安装最小必要系统依赖
      if command -v yum >/dev/null; then
      # 对于yum系统，只安装必要的最小包
      yum install -y wget unzip java-11-openjdk-headless libffi-devel tk-devel gcc make zlib-devel
      elif command -v apt-get >/dev/null; then
      apt-get update && apt-get install -y wget unzip openjdk-11-jre-headless libffi-dev tk-dev gcc make zlib1g-dev
      elif command -v apk >/dev/null; then
      apk add --no-cache wget unzip openjdk11-jre-headless libffi-dev tk-dev gcc musl-dev zlib-dev
      else
      echo "无法识别包管理器，请手动安装依赖"
      exit 1
      fi
      
      # 2. 修复pip和setuptools问题
      # 清除可能损坏的pip/setuptools安装
      rm -rf ~/.cache/pip
      python -m pip install --force-reinstall --upgrade pip setuptools
      
      # 3. 检查测试目录（更详细的检查）
      if [ ! -d "test_suite" ]; then
      echo "错误：测试目录 'test_suite' 不存在"
      echo "当前目录内容:"
      ls -la
      exit 1
      fi
      
      if [ -z "$(ls -A test_suite)" ]; then
      echo "错误：测试目录 'test_suite' 为空"
      echo "目录内容:"
      ls -la test_suite/
      echo "请确保测试文件已正确部署"
      exit 1
      fi
      
      # 4. 安装Python依赖（使用国内镜像源）
      pip install --retries=5 --timeout=300 -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple
      
      # 5. 安装Allure命令行工具
      if [ ! -f "/usr/bin/allure" ]; then
      wget -q https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.17.3/allure-commandline-2.17.3.tgz
      mkdir -p /opt/allure
      tar -zxvf allure-commandline-2.17.3.tgz -C /opt/
      ln -sf /opt/allure-2.17.3/bin/allure /usr/bin/allure
      rm -f allure-commandline-2.17.3.tgz
      fi

      # 6. 执行测试
      echo "当前工作目录: $(pwd)"
      echo "目录结构:"
        ls -la
        
      pytest test_suite --alluredir=./allure-results --html=./report.html

  - name: 生成Allure报告
    type: custom
    image: python:3.9
    commands: |
      # 生成报告
      allure generate allure-results -o allure-report --clean

  - name: 保存HTML报告
    type: artifact-save
    params:
      source: report.html
      target: report/

  - name: 保存Allure报告
    type: artifact-save
    params:
      source: allure-report/
      target: allure-report/

  - name: 发布HTML报告
    type: web-publish
    params:
      name: 测试HTML报告
      path: report/report.html

  - name: 发布Allure报告
    type: web-publish
    params:
      name: 测试Allure报告
      path: allure-report/