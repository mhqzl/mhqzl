{"name": "test_update_post", "status": "broken", "statusDetails": {"message": "requests.exceptions.MissingSchema: Invalid URL 'c/posts/1': No scheme supplied. Perhaps you meant https://c/posts/1?", "trace": "self = <test_suites.test_api.TestAPIs object at 0x000001C12DF62EE0>\n\n    def test_update_post(self):\n        \"\"\"测试更新文章\"\"\"\n        payload = {\"title\": \"updated title\"}\n>       response = requests.patch(f\"{self.base_url}/posts/1\", json=payload)\n\ntest_api.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\.venv\\lib\\site-packages\\requests\\api.py:145: in patch\n    return request(\"patch\", url, data=data, **kwargs)\n..\\.venv\\lib\\site-packages\\requests\\api.py:59: in request\n    return session.request(method=method, url=url, **kwargs)\n..\\.venv\\lib\\site-packages\\requests\\sessions.py:575: in request\n    prep = self.prepare_request(req)\n..\\.venv\\lib\\site-packages\\requests\\sessions.py:486: in prepare_request\n    p.prepare(\n..\\.venv\\lib\\site-packages\\requests\\models.py:368: in prepare\n    self.prepare_url(url, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <PreparedRequest [PATCH]>, url = 'c/posts/1', params = OrderedDict()\n\n    def prepare_url(self, url, params):\n        \"\"\"Prepares the given HTTP URL.\"\"\"\n        #: Accept objects that have string representations.\n        #: We're unable to blindly call unicode/str functions\n        #: as this will include the bytestring indicator (b'')\n        #: on python 3.x.\n        #: https://github.com/psf/requests/pull/2238\n        if isinstance(url, bytes):\n            url = url.decode(\"utf8\")\n        else:\n            url = str(url)\n    \n        # Remove leading whitespaces from url\n        url = url.lstrip()\n    \n        # Don't do any URL preparation for non-HTTP schemes like `mailto`,\n        # `data` etc to work around exceptions from `url_parse`, which\n        # handles RFC 3986 only.\n        if \":\" in url and not url.lower().startswith(\"http\"):\n            self.url = url\n            return\n    \n        # Support for unicode domain names and paths.\n        try:\n            scheme, auth, host, port, path, query, fragment = parse_url(url)\n        except LocationParseError as e:\n            raise InvalidURL(*e.args)\n    \n        if not scheme:\n>           raise MissingSchema(\n                f\"Invalid URL {url!r}: No scheme supplied. \"\n                f\"Perhaps you meant https://{url}?\"\n            )\nE           requests.exceptions.MissingSchema: Invalid URL 'c/posts/1': No scheme supplied. Perhaps you meant https://c/posts/1?\n\n..\\.venv\\lib\\site-packages\\requests\\models.py:439: MissingSchema"}, "description": "测试更新文章", "start": 1748178979801, "stop": 1748178979801, "uuid": "d9b8d405-0341-4242-a484-59567f60e1d2", "historyId": "2f6e3ff56eb84228e4832f6655240f8f", "testCaseId": "2f6e3ff56eb84228e4832f6655240f8f", "fullName": "test_suites.test_api.TestAPIs#test_update_post", "labels": [{"name": "parentSuite", "value": "test_suites"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestAPIs"}, {"name": "host", "value": "闵行权志龙"}, {"name": "thread", "value": "13640-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_suites.test_api"}]}